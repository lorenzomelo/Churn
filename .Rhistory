q()
q()
a <- matrix(1:12, nrow=3, ncol=4)
a
dim(a)
a[2,3]
a[1:2,3:4]
#Arrays
z <- array(1:24, dim = c(2,3,4))
z
#lists
gal <- list(name="NOC3379", morf="E", colours=c(0.53,0.96))
gal
gal$name
gal$morf
gal$colours
names(gal)
gal$radio- TRUE
gal
gal$radio <- TRUE
gal
#DataFrame
df <- data.frame(numbers = c(1,2,3,4,5), text = c("a","b","c","d","e))")
df
#DataFrame
df <- data.frame(numbers = c(1,2,3,4,5), text = c("a","b","c","d","e))
df
#DataFrame
df <- data.frame(numbers = c(1,2,3,4,5), text = c("a","b","c","d","e))
df
#DataFrame
df <- data.frame(numbers = c(1,2,3,4,5), text = c("a","b","c","d","e"))
df
df[1,2]
df$numbers
as.character(df$numbers)
df$numbers
source("~/.active-rstudio-document")
plot(pnorm(q=1.96, mean = 0, sd = 1))
pnorm(q=1.96, mean = 0, sd = 1)
help("hist")
hist(rnorm(10,0,1),probability = T)
hist(rnorm(50,0,1),probability = T)
set.seed(024)
hist(rnorm(50,0,1),probability = T)
hist(rnorm(50,0,1),probability = T)
set.seed(024)
hist(rnorm(50,0,1),probability = T)
set.seed(024)
hist(rnorm(50,0,1),probability = T)
set.seed(024)
hist(rnorm(50,0,1),probability = T)
hist(rnorm(50,0,1),probability = T)
hist(rnorm(150,0,1),probability = T)
hist(rnorm(200,0,1),probability = T)
hist(rnorm(300,0,1),probability = T)
hist(rnorm(1000,0,1),probability = T)
hist(rnorm(150,0,1),probability = T)
hist(rnorm(1000,0,1),probability = T)
?knitr::opts_chunk
?knitr::opts_chunk$set
install.packages('tidyverse')
library('tidyverse')
ggplot2::mpg
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hey))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +  geom_point(mapping = aes(x = hwy, y = cyl))
ggplot(data = mpg) +  geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg) +  geom_count(mapping = aes(x = class, y = drv))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = hwy, solor = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, size = hwy, color = hwy))
#ggplot(data = mpg) +  geom_count(mapping = aes(x = class, y = drv))
facet_wrap(~ hwy)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)) + facet_wrap(~ hwy)
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy, color = class)) + facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
data <- nycflights13::flights
library(nycflights13)
load(nycflights13)
library(tidyverse)
data <- nycflights13::flights
nycflights13::flights
install.packages(nycflights13)
install.package(nycflights13)
install.packages('nycflights13')
data <- nycflights13::flights
#select(data, )
view(data)
#select(data, )
view(data)
#select(data, )
view(data, dep_time, dep_time)
#select(data, )
select(data, dep_time, dep_time)
#select(data, )
select(data, dep_time, dep_time, dep_time)
#select(data, )
select(data, dep_time, dep_time)
#select(data, )
select(data, dep_time, dep_time, dep_time)
#select(data, )
select(data, dep_time, dep_time,)
#select(data, )
select(data, dep_time, dep_time, dep_time)
view(newdata)
#select(data, )
newdata <- select(data, dep_time, dep_time, dep_time)
view(newdata)
select(flights, contains("TIME"))
#select(data, )
newdata <- select(flights, dep_time, dep_time, dep_time)
select(flights, contains("TIME"))
flights <- nycflights13::flights
select(flights, contains("TIME"))
#select(data, )
newdata <- select(flights, dep_time, sched_dep_time)
view(newdata)
minutes <- function(x){x%/%100*60 + x%%100}
minutes(517)
minutes(1017)
mutate(newdata, dep_time_minutes = minutes(flights$dep_time) , sched_dep_time_minutes = minutes(flights$sched_dep_time))
?any_of()
setwd("C:/Users/valer/OneDrive/Desktop/GitHub Projects/Churn")
library(datasets) # for the data set
library(corrplot) # correlation plot
library(factoextra) # visualizing PCA results
data <- read.csv(file = 'preprocessed_data.csv')
data <- subset(data, select = -c(Attrition_Flag, X))
data
#####################
#       PCA         #
#####################
pca1 <- princomp(data[,c(1:10)],
cor = TRUE,
score = TRUE)
# COR = a logical value indicating whether the calculation
# should use the correlation matrix or the covariance matrix.
png(file = "Scree_plot.png")
summary(pca1)
fviz_eig(pca1)
dev.off()
